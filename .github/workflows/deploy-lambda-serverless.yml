name: Deploy Lambda with Serverless

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: false  # ðŸ‘ˆ Opcional, si no se pasa, no habrÃ¡ environment
        type: string
      S3_BUCKET_NAME:
        required: true
        type: string
      LAMBDA_FUNCTION_NAME:
        required: true
        type: string
      PACKAGE_PATH:
        required: true
        type: string
      S3_DEPLOY_PATH:
        required: true
        type: string
      NAME_BINARY:
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
      NODE_VERSION:
        required: true
        type: string
    secrets:
      GH_PAT:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      SERVERLESS_ACCESS_KEY:
        required: true
      FILE_ENVIRONMENTS:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest    

    steps:
      - name: ðŸ“¥ Checkout repository
        uses: actions/checkout@v3

      - name: show variables
        run: |
          echo "ENVIRONMENT=${{ inputs.ENVIRONMENT }}"
          echo "S3_BUCKET_NAME=${{ inputs.S3_BUCKET_NAME }}"
          echo "LAMBDA_FUNCTION_NAME=${{ inputs.LAMBDA_FUNCTION_NAME }}"
          echo "PACKAGE_PATH=${{ inputs.PACKAGE_PATH }}"
          echo "S3_DEPLOY_PATH=${{ inputs.S3_DEPLOY_PATH }}"
          echo "NAME_BINARY=${{ inputs.NAME_BINARY }}"
          echo "AWS_REGION=${{ inputs.AWS_REGION }}"
          echo "NODE_VERSION=${{ inputs.NODE_VERSION }}"

      - name: ðŸ“¦ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.NODE_VERSION }}

      - name: ðŸ“Œ Install dependencies
        run: npm install

      - name: archivo de variables de entorno
        run: echo "${{ secrets.FILE_ENVIRONMENTS }}" | base64 --decode > .env

      - name: serverless package
        uses: serverless/github-action@v3.2
        with:
          args: package
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}

      - name: ðŸ”„ Upload package to S3
        run: |
          aws s3 cp ${{ inputs.PACKAGE_PATH }}/${{ inputs.NAME_BINARY }} s3://${{ inputs.S3_BUCKET_NAME }}/${{ inputs.S3_DEPLOY_PATH }}/${{ inputs.LAMBDA_FUNCTION_NAME }}.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ðŸ”„ Update Lambda with new source
        run: |
          aws lambda update-function-code \
            --function-name ${{ inputs.LAMBDA_FUNCTION_NAME }} \
            --s3-bucket ${{ inputs.S3_BUCKET_NAME }} \
            --s3-key ${{ inputs.S3_DEPLOY_PATH }}/${{ inputs.LAMBDA_FUNCTION_NAME }}.zip
            --region ${{ inputs.AWS_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
